- We select an element and then add an event listener,
    "Listen for a click on this <button>"
    "Listen for a hover event on the <h1>"
    "Listen for a keypress event on text input"

- element.addEventListener(type, functionToCall);
    To add a lsitener we use the method above,
      var button = document.querySelector("button");
      var paragrapgh = document.querySelector("p");
      button.addEventListener("click", function(){
        paragraph.textContent("The button is clicked!")
      });
    All event types can be found at: https://developer.mozilla.org/en-US/docs/Web/Events
    Some of the 'type's we can use with eventListener,
      1.click
        This event is used when we want to add an event based on clicking,
          button.addEventListener("click", function(){
            paragraph.textContent("The button is clicked!")
          });
      2.change
        This event type is used when we want to add an event listener to an input,
          document.querySelector("#score").addEventListener("change", function(){
            defaultMaxScore = Number(document.querySelector("#score").value);
          });
      3.mouseover
        This one is triggered when we move mouse on an element
      4.mouseout
        This one is triggered when we move mouse out of an element
      PS: So by using 2 events above we can form a mouse hover effect.

- We can have more than one listener on an element,
    var h1 = document.getElementsByTagName("h1")[0];
    h1.addEventListener("click", function(){
      h1.style = "background-color: pink;"
    });

- Inside of a listener, "this" keyword refers to that element that is being listened,
    ----------------------------------------------
    .clicked{
      background-color: green;
    }
    ----------------------------------------------
    var lis = document.querySelectorAll("li");
    for(var i = 0; i < lis.length; i++){
      lis[i].addEventListener("click", function(){
        this.classList.toggle("clicked");
      });
    }

- We don't have to use anonymous functions, we can also use predefined functions instead,
    var lis = document.querySelectorAll("li");
    function toggleClassClicked(){
      this.classList.toggle("clicked");
    }
    for(var i = 0; i < lis.length; i++){
      lis[i].addEventListener("click", toggleClassClicked);
    }

- "document.body" directly selects the body w/o our own assignment.

------------------// BOOTSTRAP, CSS, HTML RELATED \\-------------------
- <input type="number" min="1" max="99"...
    Creates a number only input box

- <button type="button">Player Two</button>
    The 'type="button"' ATR prevents button to refresh the page onclick

- To directly make CSS styling inside the HTML file we can add the following tags right after 'title'
  <!-- CSS Directly Implemented -->
  <style type="text/css">
  .purple {
    background-color: purple;
  }

- Following attribute hanges the opacity,
    opacity: 0.5;
-----------------------------------------------------------------------