- Math.random()
    Produces a float between 0 and 1,
      0.09658498258165538
      0.11707296839731063
    If we multiplay it with 6 for example, it will produce that float between 0 and 5,
      0.5453294849428691
      4.907441825449483

- Math.floor()
    Rounds the number to its floor. We can use it with Math.random() function,
      Math.floor(Math.random() * 6) //will produce ints [0,6)

- Ternary Operator
    this.textContent === "Easy" ? numSquares = 3: numSquares = 6;

- In the future we will design our code according to design patterns, the most popular one is "Module Design Pattern". There are no floating variables or functions. They are all set with a base object, both for clean code and preventing name collisions,
    var game = {}
    game.init = function(){
      setupSquares();
      setupButtons();
      reset();
    }
    game.init();

------------------// BOOTSTRAP, CSS, HTML RELATED \\-------------------
- Following code segment provides a transition effect by any changes on the related element. Last two lines ensure the compatibility with various browsers.
    transition: all 0.3s;
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
  If we want the transition effect just for a specific change then we type that attribute instead of 'all' keyword,
    transition: background 0.5s;

- Some useful stylings,
    font-weight: normal;
    font-weight: 700;
    text-transform: uppercase;
    line-height: 1.1;
    letter-spacing: 1px;
    height: 100%;
    .button {
      border: none; /*cancels the borders (of a button)*/
      outline: none; /*deactivates the outline effect when clicked on a button*/
      background: none; /*deactivates the built-in white background of buttons*/
      font-size: inherit; /*inherits the font-size from its surrounding element*/
    }
    button:hover {
      color: white;
      background: steelblue;
    }
    .square {
      border-radius: 10%; /*rounds a square's corners of a square*/
      float: left; /*allows to place realted divs next to each other rather than one at a line*/
      width: 30%; /*sets an exact width to the element*/
    }
    #message {
      display: inline-block;
      width: 20%;
    }
-----------------------------------------------------------------------
